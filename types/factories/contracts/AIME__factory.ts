/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { AIME, AIMEInterface } from "../../contracts/AIME";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifierContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMetadata",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
    ],
    name: "masterMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenIdMetadata",
    outputs: [
      {
        internalType: "bytes16",
        name: "metadata",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifierContract",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "prompt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "aigcData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016008553480156200001657600080fd5b5060405162001b1138038062001b118339810160408190526200003991620000ae565b60408051808201825260048082526341494d4560e01b602080840182905284518086019095529184529083015290600062000075838262000185565b50600162000084828262000185565b5050600680546001600160a01b0319166001600160a01b0393909316929092179091555062000251565b600060208284031215620000c157600080fd5b81516001600160a01b0381168114620000d957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010b57607f821691505b6020821081036200012c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018057600081815260208120601f850160051c810160208610156200015b5750805b601f850160051c820191505b818110156200017c5782815560010162000167565b5050505b505050565b81516001600160401b03811115620001a157620001a1620000e0565b620001b981620001b28454620000f6565b8462000132565b602080601f831160018114620001f15760008415620001d85750858301515b600019600386901b1c1916600185901b1785556200017c565b600085815260208120601f198616915b82811015620002225788860151825594840194600190910190840162000201565b5085821015620002415787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118b080620002616000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c8063a0ddb482116100d8578063c87b56dd1161008c578063e75466e811610066578063e75466e814610348578063e985e9c51461035b578063f405e5301461039757600080fd5b8063c87b56dd1461030f578063cf69568814610322578063de8f50a11461033557600080fd5b8063a22cb465116100bd578063a22cb465146102c6578063a574cea4146102d9578063b88d4fde146102fc57600080fd5b8063a0ddb482146102a0578063a1448194146102b357600080fd5b806323d9da4d1161012f5780636352211e116101145780636352211e1461026457806370a082311461027757806395d89b411461029857600080fd5b806323d9da4d1461020c57806342842e0e1461025157600080fd5b8063081812fc11610160578063081812fc146101b9578063095ea7b3146101e457806323b872dd146101f957600080fd5b806301ffc9a71461017c57806306fdde03146101a4575b600080fd5b61018f61018a366004610fe5565b6103b4565b60405190151581526020015b60405180910390f35b6101ac610406565b60405161019b9190611059565b6101cc6101c736600461106c565b610498565b6040516001600160a01b03909116815260200161019b565b6101f76101f23660046110a1565b6104c1565b005b6101f76102073660046110cb565b6104d0565b61022f61021a36600461106c565b60076020526000908152604090205460801b81565b6040516fffffffffffffffffffffffffffffffff19909116815260200161019b565b6101f761025f3660046110cb565b610560565b6101cc61027236600461106c565b610580565b61028a610285366004611107565b61058b565b60405190815260200161019b565b6101ac6105d3565b61028a6102ae36600461116b565b6105e2565b6101f76102c13660046110a1565b6106c7565b6101f76102d436600461123d565b6106d1565b61022f6102e736600461106c565b60009081526007602052604090205460801b90565b6101f761030a36600461128a565b6106dc565b6101ac61031d36600461106c565b6106f3565b6006546101cc906001600160a01b031681565b61018f610343366004611366565b61080e565b61028a610356366004611400565b61090b565b61018f610369366004611442565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61028a6103a5366004611475565b60009998505050505050505050565b60006001600160e01b031982166380ac58cd60e01b14806103e557506001600160e01b03198216635b5e139f60e01b145b8061040057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104159061154c565b80601f01602080910402602001604051908101604052809291908181526020018280546104419061154c565b801561048e5780601f106104635761010080835404028352916020019161048e565b820191906000526020600020905b81548152906001019060200180831161047157829003601f168201915b5050505050905090565b60006104a3826109eb565b506000828152600460205260409020546001600160a01b0316610400565b6104cc828233610a24565b5050565b6001600160a01b0382166104ff57604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061050c838333610a31565b9050836001600160a01b0316816001600160a01b03161461055a576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104f6565b50505050565b61057b838383604051806020016040528060008152506106dc565b505050565b6000610400826109eb565b60006001600160a01b0382166105b7576040516322718ad960e21b8152600060048201526024016104f6565b506001600160a01b031660009081526003602052604090205490565b6060600180546104159061154c565b600880546000913391908190846105f883611586565b919050555061060733826106c7565b610611888a6115ad565b600082815260076020908152604080832080546fffffffffffffffffffffffffffffffff191660809590951c949094179093556009905220610654878983611634565b508a8a6040516106659291906116f4565b604051809103902081836001600160a01b03167fd36fec71d853cae36025f0a160198758e6fddfc6f6db5628a53c044b15b1cb048c8c8c8c8c8c6040516106b19695949392919061172d565b60405180910390a49a9950505050505050505050565b6104cc8282610b37565b6104cc338383610b51565b6106e78484846104d0565b61055a84848484610bf0565b60606106fe82610d19565b6107705760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104f6565b600082815260096020526040902080546107899061154c565b80601f01602080910402602001604051908101604052809291908181526020018280546107b59061154c565b80156108025780601f106107d757610100808354040283529160200191610802565b820191906000526020600020905b8154815290600101906020018083116107e557829003601f168201915b50505050509050919050565b6040805160606020601f89018190040282018101835291810187815260009283929182918b908b9081908501838280828437600092019190915250505090825250604080516020601f8a018190048102820181019092528881529181019190899089908190840183828082843760009201919091525050509152506006546040516361ae64f560e11b81529192506001600160a01b03169063c35cc9ea906108be90879087908690600401611776565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff91906117d9565b98975050505050505050565b6008805460009133919081908461092183611586565b919050555061093082826106c7565b61093a84866115ad565b60008281526007602090815260409182902080546fffffffffffffffffffffffffffffffff191660809490941c9390931790925580518082018252600481526366616b6560e01b92810192909252516109949082906117f6565b604051809103902082846001600160a01b03167fd36fec71d853cae36025f0a160198758e6fddfc6f6db5628a53c044b15b1cb048989866040516109da93929190611812565b60405180910390a450949350505050565b6000818152600260205260408120546001600160a01b03168061040057604051637e27328960e01b8152600481018490526024016104f6565b61057b8383836001610d34565b6000828152600260205260408120546001600160a01b0390811690831615610a5e57610a5e818486610e66565b6001600160a01b03811615610a9c57610a7b600085600080610d34565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610acb576001600160a01b0385166000908152600360205260409020805460010190555b600084815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6104cc828260405180602001604052806000815250610eca565b6001600160a01b038216610b8357604051630b61174360e31b81526001600160a01b03831660048201526024016104f6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561055a57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610c32903390889087908790600401611854565b6020604051808303816000875af1925050508015610c6d575060408051601f3d908101601f19168201909252610c6a91810190611886565b60015b610cd6573d808015610c9b576040519150601f19603f3d011682016040523d82523d6000602084013e610ca0565b606091505b508051600003610cce57604051633250574960e11b81526001600160a01b03851660048201526024016104f6565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610d1257604051633250574960e11b81526001600160a01b03851660048201526024016104f6565b5050505050565b60006008548210610d2c57506000919050565b506001919050565b8080610d4857506001600160a01b03821615155b15610e29576000610d58846109eb565b90506001600160a01b03831615801590610d845750826001600160a01b0316816001600160a01b031614155b8015610db657506001600160a01b0380821660009081526005602090815260408083209387168352929052205460ff16155b15610ddf5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016104f6565b8115610e275783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50506000908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610e71838383610ee1565b61057b576001600160a01b038316610e9f57604051637e27328960e01b8152600481018290526024016104f6565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104f6565b610ed48383610f67565b61057b6000848484610bf0565b60006001600160a01b03831615801590610f5f5750826001600160a01b0316846001600160a01b03161480610f3b57506001600160a01b0380851660009081526005602090815260408083209387168352929052205460ff165b80610f5f57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610f9157604051633250574960e11b8152600060048201526024016104f6565b6000610f9f83836000610a31565b90506001600160a01b0381161561057b576040516339e3563760e11b8152600060048201526024016104f6565b6001600160e01b031981168114610fe257600080fd5b50565b600060208284031215610ff757600080fd5b813561100281610fcc565b9392505050565b60005b8381101561102457818101518382015260200161100c565b50506000910152565b60008151808452611045816020860160208601611009565b601f01601f19169290920160200192915050565b602081526000611002602083018461102d565b60006020828403121561107e57600080fd5b5035919050565b80356001600160a01b038116811461109c57600080fd5b919050565b600080604083850312156110b457600080fd5b6110bd83611085565b946020939093013593505050565b6000806000606084860312156110e057600080fd5b6110e984611085565b92506110f760208501611085565b9150604084013590509250925092565b60006020828403121561111957600080fd5b61100282611085565b60008083601f84011261113457600080fd5b50813567ffffffffffffffff81111561114c57600080fd5b60208301915083602082850101111561116457600080fd5b9250929050565b6000806000806000806000806080898b03121561118757600080fd5b883567ffffffffffffffff8082111561119f57600080fd5b6111ab8c838d01611122565b909a50985060208b01359150808211156111c457600080fd5b6111d08c838d01611122565b909850965060408b01359150808211156111e957600080fd5b6111f58c838d01611122565b909650945060608b013591508082111561120e57600080fd5b5061121b8b828c01611122565b999c989b5096995094979396929594505050565b8015158114610fe257600080fd5b6000806040838503121561125057600080fd5b61125983611085565b915060208301356112698161122f565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156112a057600080fd5b6112a985611085565b93506112b760208601611085565b925060408501359150606085013567ffffffffffffffff808211156112db57600080fd5b818701915087601f8301126112ef57600080fd5b81358181111561130157611301611274565b604051601f8201601f19908116603f0116810190838211818310171561132957611329611274565b816040528281528a602084870101111561134257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806000806000806060878903121561137f57600080fd5b863567ffffffffffffffff8082111561139757600080fd5b6113a38a838b01611122565b909850965060208901359150808211156113bc57600080fd5b6113c88a838b01611122565b909650945060408901359150808211156113e157600080fd5b506113ee89828a01611122565b979a9699509497509295939492505050565b6000806020838503121561141357600080fd5b823567ffffffffffffffff81111561142a57600080fd5b61143685828601611122565b90969095509350505050565b6000806040838503121561145557600080fd5b61145e83611085565b915061146c60208401611085565b90509250929050565b600080600080600080600080600060a08a8c03121561149357600080fd5b61149c8a611085565b985060208a013567ffffffffffffffff808211156114b957600080fd5b6114c58d838e01611122565b909a50985060408c01359150808211156114de57600080fd5b6114ea8d838e01611122565b909850965060608c013591508082111561150357600080fd5b61150f8d838e01611122565b909650945060808c013591508082111561152857600080fd5b506115358c828d01611122565b915080935050809150509295985092959850929598565b600181811c9082168061156057607f821691505b60208210810361158057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600182016115a657634e487b7160e01b600052601160045260246000fd5b5060010190565b6fffffffffffffffffffffffffffffffff1981358181169160108510156115de5780818660100360031b1b83161692505b505092915050565b601f82111561057b57600081815260208120601f850160051c8101602086101561160d5750805b601f850160051c820191505b8181101561162c57828155600101611619565b505050505050565b67ffffffffffffffff83111561164c5761164c611274565b6116608361165a835461154c565b836115e6565b6000601f841160018114611694576000851561167c5750838201355b600019600387901b1c1916600186901b178355610d12565b600083815260209020601f19861690835b828110156116c557868501358255602094850194600190920191016116a5565b50868210156116e25760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60608152600061174160608301888a611704565b8281036020840152611754818789611704565b90508281036040840152611769818587611704565b9998505050505050505050565b60408152600061178a604083018587611704565b60208382038185015281829050604083018660005b60028110156117ca5785830384526117b883835161102d565b9385019392509084019060010161179f565b50909998505050505050505050565b6000602082840312156117eb57600080fd5b81516110028161122f565b60008251611808818460208701611009565b9190910192915050565b606081526000611826606083018587611704565b828103806020850152600082526020810160408501525061184a602082018561102d565b9695505050505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261184a608083018461102d565b60006020828403121561189857600080fd5b815161100281610fcc56fea164736f6c6343000814000a";

type AIMEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AIMEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AIME__factory extends ContractFactory {
  constructor(...args: AIMEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifierContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_verifierContract, overrides || {});
  }
  override deploy(
    _verifierContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_verifierContract, overrides || {}) as Promise<
      AIME & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AIME__factory {
    return super.connect(runner) as AIME__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AIMEInterface {
    return new Interface(_abi) as AIMEInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AIME {
    return new Contract(address, _abi, runner) as unknown as AIME;
  }
}
