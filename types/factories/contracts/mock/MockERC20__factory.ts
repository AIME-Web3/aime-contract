/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockERC20,
  MockERC20Interface,
} from "../../../contracts/mock/MockERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals__",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vToken",
        type: "address",
      },
    ],
    name: "setVToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526006805460ff60a01b1916600160a31b1790553480156200002457600080fd5b5060405162000db938038062000db98339810160408190526200004791620001e3565b3383836003620000588382620002f7565b506004620000678282620002f7565b5050506001600160a01b0381166200009957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000a481620000cc565b506006805460ff909216600160a01b0260ff60a01b1990921691909117905550620003c39050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014657600080fd5b81516001600160401b03808211156200016357620001636200011e565b604051601f8301601f19908116603f011681019082821181831017156200018e576200018e6200011e565b81604052838152602092508683858801011115620001ab57600080fd5b600091505b83821015620001cf5785820183015181830184015290820190620001b0565b600093810190920192909252949350505050565b600080600060608486031215620001f957600080fd5b83516001600160401b03808211156200021157600080fd5b6200021f8783880162000134565b945060208601519150808211156200023657600080fd5b50620002458682870162000134565b925050604084015160ff811681146200025d57600080fd5b809150509250925092565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f257600081815260208120601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b038111156200031357620003136200011e565b6200032b8162000324845462000268565b84620002a4565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6109e680620003d36000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a6116100975780639bb1a99c116100665780639bb1a99c14610216578063a9059cbb14610229578063dd62ed3e1461023c578063f2fde38b1461027557600080fd5b8063715018a6146101cc5780637e5fc1fc146101d65780638da5cb5b146101e957806395d89b411461020e57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce5671461016057806340c10f191461019057806370a08231146101a357600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610288565b60405161010f919061085f565b60405180910390f35b61012b6101263660046108c9565b61031a565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b3660046108f3565b610334565b60065474010000000000000000000000000000000000000000900460ff1660405160ff909116815260200161010f565b61013f61019e3660046108c9565b610358565b61013f6101b136600461092f565b6001600160a01b031660009081526020819052604090205490565b6101d4610405565b005b6101d46101e436600461092f565b610419565b6005546001600160a01b03165b6040516001600160a01b03909116815260200161010f565b610102610450565b6006546101f6906001600160a01b031681565b61012b6102373660046108c9565b61045f565b61013f61024a366004610951565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101d461028336600461092f565b61046d565b60606003805461029790610984565b80601f01602080910402602001604051908101604052809291908181526020018280546102c390610984565b80156103105780601f106102e557610100808354040283529160200191610310565b820191906000526020600020905b8154815290600101906020018083116102f357829003601f168201915b5050505050905090565b6000336103288185856104ab565b60019150505b92915050565b6000336103428582856104bd565b61034d85858561053b565b506001949350505050565b6006546000906001600160a01b031633148061037e57506005546001600160a01b031633145b6103f55760405162461bcd60e51b815260206004820152602860248201527f4d6f636b45524332303a206f6e6c792076546f6b656e206f72206f776e65722060448201527f63616e206d696e7400000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103ff838361059a565b50919050565b61040d6105d4565b6104176000610601565b565b6104216105d4565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60606004805461029790610984565b60003361032881858561053b565b6104756105d4565b6001600160a01b03811661049f57604051631e4fbdf760e01b8152600060048201526024016103ec565b6104a881610601565b50565b6104b88383836001610660565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610535578181101561052657604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103ec565b61053584848484036000610660565b50505050565b6001600160a01b03831661056557604051634b637e8f60e11b8152600060048201526024016103ec565b6001600160a01b03821661058f5760405163ec442f0560e01b8152600060048201526024016103ec565b6104b8838383610735565b6001600160a01b0382166105c45760405163ec442f0560e01b8152600060048201526024016103ec565b6105d060008383610735565b5050565b6005546001600160a01b031633146104175760405163118cdaa760e01b81523360048201526024016103ec565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841661068a5760405163e602df0560e01b8152600060048201526024016103ec565b6001600160a01b0383166106b457604051634a1406b160e11b8152600060048201526024016103ec565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561053557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161072791815260200190565b60405180910390a350505050565b6001600160a01b03831661076057806002600082825461075591906109b8565b909155506107d29050565b6001600160a01b038316600090815260208190526040902054818110156107b35760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103ec565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166107ee5760028054829003905561080d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161085291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561088c57858101830151858201604001528201610870565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108c457600080fd5b919050565b600080604083850312156108dc57600080fd5b6108e5836108ad565b946020939093013593505050565b60008060006060848603121561090857600080fd5b610911846108ad565b925061091f602085016108ad565b9150604084013590509250925092565b60006020828403121561094157600080fd5b61094a826108ad565b9392505050565b6000806040838503121561096457600080fd5b61096d836108ad565b915061097b602084016108ad565b90509250929050565b600181811c9082168061099857607f821691505b6020821081036103ff57634e487b7160e01b600052602260045260246000fd5b8082018082111561032e57634e487b7160e01b600052601160045260246000fdfea164736f6c6343000814000a";

type MockERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC20__factory extends ContractFactory {
  constructor(...args: MockERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals__: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals__,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    decimals__: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, decimals__, overrides || {}) as Promise<
      MockERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC20__factory {
    return super.connect(runner) as MockERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC20Interface {
    return new Interface(_abi) as MockERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC20 {
    return new Contract(address, _abi, runner) as unknown as MockERC20;
  }
}
